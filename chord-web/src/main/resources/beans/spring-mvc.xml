<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvn="http://www.springframework.org/schema/mvc" xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
http://www.springframework.org/schema/beans/spring-beans-4.2.xsd
http://www.springframework.org/schema/context
http://www.springframework.org/schema/context/spring-context-4.2.xsd
http://www.springframework.org/schema/mvc
http://www.springframework.org/schema/mvc/spring-mvc-4.2.xsd http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd">

    <!--
        <context:annotation-config>
        declares support for general annotations
        such as @Required, @Autowired, @PostConstruct, and so on.

        <mvc:annotation-driven />
        declares explicit support for annotation-driven MVC controllers
        (i.e. @RequestMapping, @Controller, although support for those
        is the default behaviour), as well as adding support for declarative
        validation via @Valid and message body marshalling with @RequestBody/ResponseBody
    -->
    <mvc:annotation-driven/>
    <!--<context:annotation-config/>-->
    <!--springmvc 自容器扫描controller-->
    <context:component-scan base-package="com.alibaba.chord.web.controller"/>

    <!--静态资源 设置缓存-->
    <mvc:default-servlet-handler/>
    <mvn:resources mapping="/main/public/css/**" location="/public/css/">
        <mvc:cache-control max-age="3600" cache-public="true"/>
    </mvn:resources>
    <mvn:resources mapping="/main/public/js/**" location="/public/js/">
        <mvc:cache-control max-age="3600" cache-public="true"/>
    </mvn:resources>
    <mvn:resources mapping="/main/public/images/**" location="/public/images/">
        <mvc:cache-control max-age="3600" cache-public="true"/>
    </mvn:resources>

    <mvn:resources mapping="/main/public/fonts/**" location="/public/fonts/">
        <mvc:cache-control max-age="3600" cache-public="true"/>
    </mvn:resources>


    <!--spring 拦截器-->
    <mvc:interceptors>
        <!--生成token-->
        <mvc:interceptor>
            <mvc:mapping path="/login"/>
            <bean id="tokenInterceptor" class="interceptor.TokenInterceptor"/>
        </mvc:interceptor>

        <!--登录拦截-->
        <mvc:interceptor>
            <mvc:mapping path="/doLogin"/>
            <bean id="loginInterceptor" class="interceptor.LoginInterceptor"/>
        </mvc:interceptor>
    </mvc:interceptors>

    <!-- 避免IE执行AJAX时,返回JSON出现下载文件 -->
    <!-- Json 和对象转化 -->
    <bean id="mappingJackson2HttpMessageConverter"
          class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
        <property name="supportedMediaTypes">
            <list>
                <value>text/html;charset=UTF-8</value>
            </list>
        </property>
    </bean>

    <!-- 启动Spring MVC的注解功能，完成请求和注解POJO的映射 -->
    <bean class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter">
        <property name="messageConverters">
            <list>
                <ref bean="mappingJackson2HttpMessageConverter"/><!-- json转换器 -->
            </list>
        </property>
    </bean>

    <!-- 对模型视图名称的解析，即在模型视图名称添加前后缀 -->
    <bean class="org.springframework.web.servlet.mvc.support.ControllerClassNameHandlerMapping"/>

    <!-- jsp视图解析器 -->
    <bean id="jspViewResolver" class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="viewClass" value="org.springframework.web.servlet.view.JstlView"/>
        <property name="prefix" value="/WEB-INF/views/"/>
        <property name="suffix" value=".jsp"/>
        <property name="order" value="1"/>
    </bean>

    <!-- velocity配置-->
    <bean id="velocityConfig" class="org.springframework.web.servlet.view.velocity.VelocityConfigurer">
        <property name="resourceLoaderPath" value="/WEB-INF/vm/"/>
        <property name="configLocation" value="classpath:velocity.properties"/>
    </bean>

    <!-- velocity 视图解析器 -->
    <bean id="velocityViewResolver" class="org.springframework.web.servlet.view.velocity.VelocityViewResolver">
        <!--<property name="prefix" value="/WEB-INF/views/"/>-->
        <property name="contentType" value="text/html;charset=UTF-8"/>
        <property name="suffix" value=".vm"/>
        <property name="prefix" value="/"/>
        <!--默认缓存1024M-->
        <property name="cache" value="true"/>
        <property name="order" value="0"/>
    </bean>


    <!--shiro 注解配置-->
    <!-- 保证实现了Shiro内部lifecycle函数的bean执行 -->
    <bean id="lifecycleBeanPostProcessor" class="org.apache.shiro.spring.LifecycleBeanPostProcessor"/>

    <bean class="org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator"
          depends-on="lifecycleBeanPostProcessor">
        <property name="proxyTargetClass" value="true"/>
    </bean>
    <!--开启shiro注解-->
    <aop:config proxy-target-class="true"/>
    <bean class="org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor">
        <property name="securityManager" ref="securityManager"/>
    </bean>
    <bean class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">
        <property name="exceptionMappings">
            <props>
                <!--登录-->
                <prop key="org.apache.shiro.authz.UnauthenticatedException">
                    redirect:/login
                </prop>
                <!--授权-->
                <prop key="org.apache.shiro.authz.UnauthorizedException">
                    redirect:/unauthorized
                </prop>
            </props>
        </property>
        <property name="defaultErrorView" value="/"/>
    </bean>

    <!-- 文件上传 -->
    <bean id="multipartResolver"
          class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
        <property name="defaultEncoding" value="UTF-8"/>
        <property name="maxUploadSize" value="32505856"/>
        <property name="maxInMemorySize" value="4096"/>
    </bean>

</beans>